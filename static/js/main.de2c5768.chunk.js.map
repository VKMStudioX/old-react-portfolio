{"version":3,"sources":["img/pcoweb1.png","img/pcoweb2.png","img/pcoweb3.png","img/pcoweb4.png","img/pcoweb5.png","img/pcoweb6.png","img/hmi1.png","img/hmi2.png","img/hmi3.png","img/hmi4.png","img/hmi5.png","img/hmi6.png","Store/StoreProvider.jsx","img/VKM_logo_v4.png","components/LabelItems.jsx","components/ListItems.jsx","components/Slider2.jsx","components/ContactForm.jsx","layouts/LayoutGrid.jsx","layouts/LayoutActivator.jsx","layouts/HeaderSui.jsx","components/Modal.jsx","components/ScrollTopArrow.jsx","App.jsx","index.js"],"names":["StoreContext","createContext","StoreProvider","children","pCOWebImagesState","src","pcoweb1","altText","pcoweb2","pcoweb3","pcoweb4","pcoweb5","pcoweb6","hmiImagesState","hmi1","hmi2","hmi3","hmi4","hmi5","hmi6","aboutMeState","headerIcon","headerContent","dividerKeywords","labelItems","labelIcon","labelColor","labelName","useState","pCOWebImages","setPCOWebImages","hmiImages","setHmiImages","listIcons","listIcon","listHeader","listDescr","isAddDivider","addDividerKeywords","addListIcon","addListHeader","addListDescr","pCOWebProjects","setPCOWebProjects","hmiProjects","setHmiProjects","skills","setSkills","aboutMe","setAboutMe","headerMailIcon","headerMailContent","dividerMailKeywords","contact","setContact","contactFormInfo","setContactFormInfo","name","subject","email","message","contactForm","setContactForm","ModalOpen","setModalOpen","ModalImage","setModalImage","contactRef","setContactRef","console","log","JSON","stringify","Provider","value","LabelItems","LabelItemsProps","map","item","Label","as","color","Icon","ListItems","ListItemsProps","itemsList","List","Item","size","Content","Header","Description","additionalDividerAndItemList","Divider","horizontal","Slider","props","slides","items","onClick","openModal","alt","style","opacity","useContext","imgSrc","autoPlay","infiniteLoop","interval","showArrows","showThumbs","showStatus","showIndicators","useKeyboardArrows","ContactForm","isEmailOK","nameRef","useRef","subjectRef","emailRef","messageRef","isClicked","nameState","setNameState","subjectState","setSubjectState","emailState","setEmailState","messageState","setMessageState","success","error","formCheckerState","setFormCheckerState","includes","Form","inverted","widths","length","Group","Ref","innerRef","Field","id","control","Input","label","placeholder","onChange","e","target","TextArea","disabled","Button","content","preventDefault","handleSubmitForm","Message","header","LayoutGrid","dataLeft","dataRight","dataSelector","ProjectContent","Grid","columns","divided","layoutGridIsInverted","stackable","padded","Row","Column","layoutGridColumnColor","layoutType","tag","animated","celled","selection","layoutGridIsCelled","projectAccPanels","key","title","icon","Segment","Accordion","defaultActiveIndex","panels","vertical","LayoutActivator","active","isMainActive","isProjectActive","isContactActive","menuActiveState","setMenuActiveState","dataSelectorProjects","useEffect","ScrollOptions","scrollMode","behavior","options","HeaderSui","state","activeItem","menuVisible","handleItemClick","setState","this","MenuItems","nameActive","nameIcon","to","Menu","MenuHeader","borderless","floated","MenuHeaderMobile","open","textAlign","Image","VKM_Logo","width","padding","margin","only","Component","ModalImageViewer","setOpen","Modal","basic","onOpen","onClose","wrapped","centered","Actions","ScrollTopArrow","showScroll","setShowScroll","window","addEventListener","checkScrollTop","removeEventListener","pageYOffset","float","position","left","corner","className","scrollTo","top","height","display","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de2c5768.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pcoweb1.c8f1f923.png\";","export default __webpack_public_path__ + \"static/media/pcoweb2.8967f232.png\";","export default __webpack_public_path__ + \"static/media/pcoweb3.ea9d5fdc.png\";","export default __webpack_public_path__ + \"static/media/pcoweb4.876fe62d.png\";","export default __webpack_public_path__ + \"static/media/pcoweb5.1439bf39.png\";","export default __webpack_public_path__ + \"static/media/pcoweb6.79d74cf4.png\";","export default __webpack_public_path__ + \"static/media/hmi1.be6b33e4.png\";","export default __webpack_public_path__ + \"static/media/hmi2.e46fe056.png\";","export default __webpack_public_path__ + \"static/media/hmi3.f387329e.png\";","export default __webpack_public_path__ + \"static/media/hmi4.69bdf736.png\";","export default __webpack_public_path__ + \"static/media/hmi5.3600057e.png\";","export default __webpack_public_path__ + \"static/media/hmi6.aa952fc6.png\";","import React, { createContext, useState } from 'react';\r\n\r\nimport pcoweb1 from '../img/pcoweb1.png'\r\nimport pcoweb2 from '../img/pcoweb2.png'\r\nimport pcoweb3 from '../img/pcoweb3.png'\r\nimport pcoweb4 from '../img/pcoweb4.png'\r\nimport pcoweb5 from '../img/pcoweb5.png'\r\nimport pcoweb6 from '../img/pcoweb6.png'\r\nimport hmi1 from '../img/hmi1.png'\r\nimport hmi2 from '../img/hmi2.png'\r\nimport hmi3 from '../img/hmi3.png'\r\nimport hmi4 from '../img/hmi4.png'\r\nimport hmi5 from '../img/hmi5.png'\r\nimport hmi6 from '../img/hmi6.png'\r\n\r\nexport const StoreContext = createContext();\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n    \r\n    const pCOWebImagesState = [\r\n        { src: pcoweb1, altText: 'Wizualizacja - pCOWeb' },\r\n        { src: pcoweb2, altText: 'Wizualizacja - pCOWeb' },\r\n        { src: pcoweb3, altText: 'Wizualizacja - pCOWeb' },\r\n        { src: pcoweb4, altText: 'Wizualizacja - pCOWeb' },\r\n        { src: pcoweb5, altText: 'Wizualizacja - pCOWeb' },\r\n        { src: pcoweb6, altText: 'Wizualizacja - pCOWeb' },\r\n      ]\r\n\r\n     const hmiImagesState = [\r\n        { src: hmi1,    altText: 'Wizualizacja - hmi'    },\r\n        { src: hmi2,    altText: 'Wizualizacja - hmi'    },\r\n        { src: hmi3,    altText: 'Wizualizacja - hmi'    },\r\n        { src: hmi4,    altText: 'Wizualizacja - hmi'    },\r\n        { src: hmi5,    altText: 'Wizualizacja - hmi'    },\r\n        { src: hmi6,    altText: 'Wizualizacja - hmi'    },\r\n      ]\r\n\r\n     const pCOWebProjectsState =\r\n        {\r\n          headerIcon: 'computer',\r\n          headerContent: 'Visualization - pCOWeb',\r\n          dividerKeywords: 'Visualization of Carel programmable controller for HVAC.Technologies used listed below.',\r\n          listIcons: [\r\n              {\r\n                listIcon: 'microchip',\r\n                listHeader: 'pCOWeb',\r\n                listDescr: 'Carel pCOWeb provides http server and many more functionalities like mailbot, alarms, logger, admin panel',\r\n              },\r\n              {\r\n                listIcon: 'html5',\r\n                listHeader: 'HTML5',\r\n                listDescr: 'HTML is primary functionality of www page used for Visualization', \r\n              },\r\n              {\r\n                listIcon: 'css3 alternate',\r\n                listHeader: 'CSS3',\r\n                listDescr: 'CSS used for styling elements', \r\n              },\r\n              {\r\n                listIcon: 'js',\r\n                listHeader: 'JavaScript',\r\n                listDescr: 'VanillaJS & jQuery for manipulate the data , AJAX for read/write data from/to PLC(pCOWeb Card)', \r\n              },        \r\n                    ],\r\n          isAddDivider: true,\r\n          addDividerKeywords: 'Live React Demo',\r\n          addListIcon: 'react',\r\n          addListHeader: 'React',\r\n          addListDescr: ['I have prepared (in my house) the PLC with modern visualization based on the newest technologies like:','- Node-RED for backend (with Modbus-RTU RS-485 communication for data fetching)', ' - ReactJS with React-Router< framework for frontend.', 'Please contact me if you interessted to see source and how it works.']\r\n        }\r\n\r\n        const hmiProjectsState =\r\n        {\r\n          headerIcon: 'tablet alternate',\r\n          headerContent: 'Visualization - HMI',\r\n          dividerKeywords: 'Visualization of Carel programmable controller for HVAC. Technologies used listed below.',\r\n          listIcons: [\r\n            {\r\n              listIcon: 'microchip',\r\n              listHeader: 'pGDTouch',\r\n              listDescr: 'Carel pGDTouch is an device which provides a Visualization and many more functionalities like alarms, logger, admin panel in one device mounted for standard in a automatic cabinets',\r\n            },\r\n            {\r\n              listIcon: 'code branch',\r\n              listHeader: 'RS-485',\r\n              listDescr: 'Serial communication with PLC and HMI is probider by RS-485 protocol', \r\n            },\r\n                    ],\r\n          isAddDivider: false,\r\n          addDividerKeywords: '',\r\n          addListIcon: '',\r\n          addListHeader: '',\r\n          addListDescr: ''\r\n        }\r\n\r\n\r\n        const skillsState =\r\n        {\r\n          headerIcon: 'wrench',\r\n          headerContent: 'Skills & Experiences',\r\n          dividerKeywords: 'Some of posible usefeul skills which I have for you and yours work are listed below.',\r\n          listIcons: [\r\n              {\r\n                listIcon: 'tablet alternate',\r\n                listHeader: 'Visualization of control processes like HVAC, transportation, or other items manipulation',\r\n                listDescr: \"I'm experienced with VIPA panels, Carel pGDT Touch panels, web visualization at pCOWeb systems\",\r\n              },\r\n              {\r\n                listIcon: 'computer',\r\n                listHeader: 'Web & Mobile applications',\r\n                listDescr: \"I've used some technologies and frameworks like HTML, CSS, Javascript, jQuery, React (with Router, Material-UI, Semantic-UI, and many other plugins), Vue, Bootstrap, Sass, Node-RED,\", \r\n              },\r\n              {\r\n                listIcon: 'microchip',\r\n                listHeader: 'PLC programming',\r\n                listDescr: 'I have kinda experience with programming of PLC machines like Siemens S7-200/300/1200, EATON Easy or Mitsubishi FX. In Addition, I can easy learn how to use the environment of any new proggrammable controller if I needed to.', \r\n              },\r\n              {\r\n                listIcon: 'tags',\r\n                listHeader: 'Quality assurance and tests',\r\n                listDescr: \"I've manually tested many applications used in HVAC environment, comparing the funcionality of programmable controlles with the company standards and the clients guidelines(assumptions) and/or documentation\", \r\n              },   \r\n              {\r\n                listIcon: 'key',\r\n                listHeader: 'Designing automation systems',\r\n                listDescr: \"I have much experience in Computer-Aided Designing for automation systems, like a AutoCAD, PCSchematic(a program like EPLAN). Making an technical documentation (DTR) from zero to end.\",\r\n              },   \r\n              {\r\n                listIcon: 'laptop',\r\n                listHeader: 'Computers, office devices, network and graphic issuses',\r\n                listDescr: \"I have some experience with computers, starting from assembling the PC from the parts (e.g. CPU or RAMs), through the using the computers (e.g. MS Windows, MS Office, Internet Viewers, GIMP/Photoshop/Inkscape for graphics, configuring the networks and routers), office and industrial devices like printers, marker printers too, ending to developing the code in MS Visual Studio or Brackets.\", \r\n              },   \r\n              {\r\n                listIcon: 'legal',\r\n                listHeader: 'Manually skills',\r\n                listDescr: \"I know how to use the tools, including power tools, and know some techniques to do manual things, for example assembling the automation or... simply kitchen, cabinets :P \", \r\n              },   \r\n              {\r\n                listIcon: 'user circle',\r\n                listHeader: 'Foreign tongues',\r\n                listDescr: \"My mother tongue is polish, but I know english in a enough level to understanding the technical docuemtation of devices and frameworks\", \r\n              },   \r\n\r\n                    ],\r\n          isAddDivider: false,\r\n          addDividerKeywords: '',\r\n          addListIcon: '',\r\n          addListHeader: '',\r\n          addListDescr: '',\r\n              }\r\n\r\n              const aboutMeState =\r\n              {\r\n                headerIcon: 'spy',\r\n                headerContent: 'Information - About me',\r\n                dividerKeywords: [\r\n                    \"Hi! I'm Krzysztof Meyer and I'm aspire to be front-end developer, and this is my Portfolio.\",\r\n                    \"You can see there a litle sight of my works of years in companies when I worked after studies, and, there are also newest projects in modern technologies (React, Vue, Node-RED).\",\r\n                    \"Some years ago, i finished the engineers and master studys in electro-automation, and i worked in this, in HVAC industry section, but I decided to change work in my life so... let's go, IT waits!\",\r\n                    \"Why? Because... I had satisfaction in making a visualization of automation processes, what, in short, is a kind of front-end develompent (with a back-end from programming controller's hardware and software), not exactly the same actual technology, but still yes\",\r\n                    \"So, here I am, the visualizations of my web had HTML/CSS/JS, so I know something about this, and, I learned more and more... and, maybe, more enough to start the new work? new Adventures and, hehe, new Problems?\"\r\n                ],\r\n                labelItems: [\r\n                  { labelIcon: 'cogs', labelColor: 'blue', labelName: \"Automation\", },\r\n                  { labelIcon: 'cog', labelColor: 'blue', labelName: \"Siemens S7\", },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"S7-200\",  },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"S7-300\",  },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"S7-1200\", },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"VIPA\", },\r\n                  { labelIcon: 'cog', labelColor: 'blue', labelName: \"Mitsubishi FX\", },\r\n                  { labelIcon: 'cog', labelColor: 'blue', labelName: \"Carel pCO\", },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"pCOWeb\", },\r\n                  { labelIcon: 'microchip', labelColor: 'blue', labelName: \"pGDTouch (pGDT)\", },\r\n                  \r\n                  { labelIcon: 'lightning',labelColor: 'teal', labelName: \"Inverters\", },\r\n                  { labelIcon: 'power cord',labelColor: 'teal', labelName: \"Lenze i510/550\", },\r\n                  { labelIcon: 'power cord',labelColor: 'teal', labelName: \"ABB ACS310\", },\r\n                  { labelIcon: 'power cord',labelColor: 'teal', labelName: \"EURA E800\", },\r\n                  { labelIcon: 'power cord',labelColor: 'teal', labelName: \"LG iG5A/iC5A\",},\r\n\r\n                  { labelIcon: 'mobile alternate', labelColor: 'violet', labelName: \"IT Technology\", },\r\n                  { labelIcon: 'html5', labelColor: 'violet', labelName: \"HTML\", },\r\n                  { labelIcon: 'css3', labelColor: 'violet', labelName: \"CSS\", },\r\n                  { labelIcon: 'js', labelColor: 'violet', labelName: \"JavaScript\", },\r\n                  { labelIcon: 'react', labelColor: 'violet', labelName: \"React\", },\r\n                  { labelIcon: 'vuejs', labelColor: 'violet', labelName: \"VueJS\", },\r\n                  { labelIcon: 'code branch', labelColor: 'violet', labelName: \"Node-RED\", },\r\n                  \r\n                  { labelIcon: 'computer', labelColor: 'purple', labelName: \"CAD's\", },\r\n                  { labelIcon: 'crop', labelColor: 'purple', labelName: \"AutoCAD\", },\r\n                  { labelIcon: 'crop', labelColor: 'purple', labelName: \"PC Schematic\", },\r\n                  { labelIcon: 'crop', labelColor: 'purple', labelName: \"SEE Electrical\", },\r\n                  { labelIcon: 'crop', labelColor: 'purple', labelName: \"EPLAN\", },\r\n\r\n                  { labelIcon: 'compose', labelColor: 'brown', labelName: \"Other skills\", },\r\n                  { labelIcon: 'user', labelColor: 'brown', labelName: \"Analytic thinking\", },\r\n                  { labelIcon: 'user plus', labelColor: 'brown', labelName: \"Fast learning\", },\r\n                  { labelIcon: 'user plus', labelColor: 'brown', labelName: \"Ambition\", },\r\n                  \r\n                  { labelIcon: 'microphone', labelColor: 'grey', labelName: \"Tongues\", },\r\n                  { labelIcon: 'microphone', labelColor: 'grey', labelName: \"Polish\", },\r\n                  { labelIcon: 'microphone', labelColor: 'grey', labelName: \"English\", },\r\n\r\n                  \r\n                ]\r\n              }\r\n\r\n              const contactState =\r\n              {\r\n                headerIcon: 'call square',\r\n                headerContent: 'Contact',\r\n                dividerKeywords: 'if you are interessted to any form of cooperation with me, there is a some contact listed below.',\r\n                listIcons: [\r\n                    {\r\n                      listIcon: 'call',\r\n                      listHeader: '+48 696-913-016',\r\n                      listDescr: \"If you want to call me, there is telephone number in Poland\",\r\n                    },\r\n                    {\r\n                      listIcon: 'mail',\r\n                      listHeader: 'meact@wp.pl',\r\n                      listDescr: \"If you want to mail me, there is mail adress in Wirtualna Polska domain. Or you can directly send a message with a form on a right side ->\", \r\n                    },\r\n                    {\r\n                      listIcon: 'facebook',\r\n                      listHeader: 'fb.com/vkmstudio',\r\n                      listDescr: 'There is my facebook fanpage. You should like it! Or you can, simply, message me.', \r\n                    },\r\n                          ],\r\n\r\n                headerMailIcon: 'mail',\r\n                headerMailContent: 'Contact Form',\r\n                dividerMailKeywords: 'if you are interessted to any form of cooperation with me, there is a some contact listed below.',     \r\n                isAddDivider: false,\r\n                addDividerKeywords: 'Copright',\r\n                addListIcon: 'copyright',\r\n                addListHeader: 'Copyrighted by VKM Studio',\r\n                addListDescr: '2020',\r\n                    }\r\n\r\n                    const contactFormInfoState =\r\n                    {\r\n                      headerIcon: 'mail',\r\n                      headerContent: 'Contact Form',\r\n                      dividerKeywords: 'if you are interessted to any form of cooperation with me, there is a some contact listed below.',   \r\n                          }\r\n\r\n                    const contactFormState =\r\n                          {\r\n                      name: '',\r\n                      subject: '',\r\n                      email: '3',   \r\n                      message: '4',\r\n                          }\r\n\r\n\r\n    const [pCOWebImages, setPCOWebImages] = useState(pCOWebImagesState);\r\n    const [hmiImages, setHmiImages] = useState(hmiImagesState);\r\n    const [pCOWebProjects, setPCOWebProjects] = useState(pCOWebProjectsState);\r\n    const [hmiProjects, setHmiProjects] = useState(hmiProjectsState);\r\n\r\n    const [skills, setSkills] = useState(skillsState);\r\n    const [aboutMe, setAboutMe] = useState(aboutMeState);\r\n\r\n    const [contact, setContact] = useState(contactState);\r\n    const [contactFormInfo, setContactFormInfo] = useState(contactFormInfoState);\r\n\r\n    const [contactForm, setContactForm] = useState(contactFormState);\r\n\r\n    const [ModalOpen, setModalOpen] = useState(false);\r\n    const [ModalImage, setModalImage] = useState('');\r\n\r\n    const [contactRef, setContactRef] = useState();                    \r\n\r\n    console.log(JSON.stringify(aboutMeState));\r\n\r\n\r\n        // useEffect(() => {\r\n        //     setPCOWebImages(store.pCOWebImages) \r\n        //     setHmiImages(store.hmiImages)\r\n        //     setPCOWebProjects(store.pCOWebProjects)\r\n        // }, []);\r\n        \r\n\r\nreturn (\r\n    <StoreContext.Provider value={{\r\n        pCOWebImages,\r\n        setPCOWebImages,\r\n        hmiImages,\r\n        setHmiImages, \r\n        pCOWebProjects,\r\n        setPCOWebProjects,\r\n        hmiProjects,\r\n        setHmiProjects,\r\n        skills,\r\n        setSkills,\r\n        aboutMe,\r\n        setAboutMe, \r\n        contact,\r\n        setContact,\r\n        contactFormInfo,\r\n        setContactFormInfo,\r\n\r\n        contactForm,\r\n        setContactForm, \r\n\r\n        ModalOpen, \r\n        setModalOpen,\r\n        ModalImage,\r\n        setModalImage,\r\n\r\n        contactRef,\r\n        setContactRef\r\n    }}>\r\n        {children}\r\n  </StoreContext.Provider>\r\n    );\r\n\r\n};\r\n\r\nexport default StoreProvider;\r\n","export default __webpack_public_path__ + \"static/media/VKM_logo_v4.288b9b20.png\";","import React from 'react';\r\nimport { Icon, Label } from 'semantic-ui-react';\r\n\r\nconst LabelItems = ({LabelItemsProps}) => {\r\n\r\n    const labelItems = LabelItemsProps.map((item) => {\r\n        return (\r\n            <Label as='a' color={item.labelColor} key={item.labelName}> \r\n              <Icon name={item.labelIcon} />\r\n                {item.labelName}</Label>\r\n        );\r\n      });\r\n\r\n    return ( \r\n        <>\r\n         {labelItems}\r\n    </>\r\n    )\r\n}\r\nexport default LabelItems;","import React from 'react';\r\nimport { Icon, List, Divider } from 'semantic-ui-react';\r\n\r\nconst ListItems = ({ListItemsProps}) => {\r\n\r\n    const ListItemsPropsIcons = ListItemsProps.listIcons\r\n\r\n    const itemsList = ListItemsPropsIcons.map((item) => {\r\n        return (\r\n            <List.Item key={item.listHeader}>\r\n            <Icon name={item.listIcon} size='big' />\r\n            <List.Content>\r\n              <List.Header>{item.listHeader}</List.Header>\r\n              <List.Description>\r\n              {item.listDescr}\r\n              </List.Description>\r\n            </List.Content>\r\n          </List.Item>\r\n        );\r\n      });\r\n\r\n    const additionalDividerAndItemList = (\r\n        <>\r\n        <Divider horizontal>{ListItemsProps.addDividerKeywords}</Divider>\r\n        <List.Item>\r\n          <Icon name={ListItemsProps.addListIcon} size='big' />\r\n          <List.Content>\r\n            <List.Header>{ListItemsProps.addListHeader}</List.Header>\r\n            <List.Description>\r\n              {ListItemsProps.addListDescr[0]} <br/>\r\n              {ListItemsProps.addListDescr[1]} <br/>\r\n              {ListItemsProps.addListDescr[2]} <br/>\r\n              {ListItemsProps.addListDescr[3]}\r\n            </List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n        </>\r\n    )\r\n\r\n\r\n    return ( \r\n        <>\r\n        {itemsList}\r\n        {ListItemsProps.isAddDivider === true \r\n            ? additionalDividerAndItemList\r\n            : null}\r\n    </>\r\n    )\r\n}\r\nexport default ListItems;","import React, { useContext }  from 'react';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport { StoreContext } from '../Store/StoreProvider';\r\n\r\n\r\nconst Slider = (props) => {\r\n\r\n    const items = props.items;\r\n    const slides = items.map((item) => {\r\n        return (\r\n            \r\n            <div key={item.src} onClick={() => openModal(item.src)}>\r\n            <img src={item.src} alt={item.altText} style={{opacity: '1', }} />\r\n            {/* <p className=\"legend\">{item.caption}</p> */}\r\n        </div>\r\n        );\r\n      });\r\n\r\n      const  { setModalOpen, setModalImage } = useContext(StoreContext);\r\n     \r\n      const openModal = (imgSrc) => {\r\n        setModalImage(imgSrc)\r\n        setModalOpen(true);\r\n      }\r\n\r\n  return (\r\n      <>\r\n        <Carousel autoPlay={true} infiniteLoop={true} interval='5000' showArrows={true} showThumbs={false} showStatus={false} showIndicators={false} useKeyboardArrows >\r\n                {slides}\r\n            </Carousel>\r\n           \r\n</>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useState, useRef, useContext} from 'react';\r\nimport { Form, Input, TextArea, Button, Message, Ref } from 'semantic-ui-react';\r\nimport { StoreContext } from '../Store/StoreProvider';\r\n\r\nconst ContactForm = () => {\r\n\r\n    const  { contactForm, setContactForm  } = useContext(StoreContext);\r\n\r\n    const nameRef = useRef();\r\n    const subjectRef = useRef();\r\n    const emailRef = useRef();\r\n    const messageRef = useRef();\r\n\r\n    const [nameState, setNameState] = useState({value:'', isClicked: false});\r\n    const [subjectState, setSubjectState] = useState({value:'', isClicked: false});\r\n    const [emailState, setEmailState] = useState({value:'', isClicked: false});\r\n    const [messageState, setMessageState] = useState({value:'', isClicked: false});\r\n    const [formCheckerState, setFormCheckerState] = useState({success: false, error: false});\r\n\r\n    let isEmailOK;\r\n    emailState.value.includes('@') && emailState.value.includes('.') ? isEmailOK = true : isEmailOK = false\r\n    console.log(\"isEmailOK: \"+isEmailOK);\r\n\r\n    \r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        setContactForm({name: nameState.value, subject: subjectState.value, email: emailState.value, message: messageState.value});\r\n        // setContactForm({\r\n        //   name: nameRef.current.lastChild.firstChild.value,\r\n        //   subject: subjectRef.current.lastChild.firstChild.value,\r\n        //   email: emailRef.current.lastChild.firstChild.value, \r\n        //   message: messageRef.current.lastChild.value\r\n        //               });\r\n        setNameState({value:'', isClicked: false});\r\n        setSubjectState({value:'', isClicked: false});\r\n        setEmailState({value:'', isClicked: false});\r\n        setMessageState({value:'', isClicked: false});\r\n        setFormCheckerState({success: true, error: false})\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n    return ( \r\n        <>\r\n         <Form inverted color=\"white\" widths=\"equal\" success={formCheckerState.success} error={nameState.value.length > 0 && subjectState.value.length > 0 && emailState.value.length > 0 && messageState.value.length > 0 && !isEmailOK}> \r\n                        <Form.Group widths='equal'>\r\n                        <Ref innerRef={nameRef}>\r\n                          <Form.Field\r\n                            error={nameState.value.length === 0 && nameState.isClicked}\r\n                            id='form-input-control-first-name'\r\n                            control={Input}\r\n                            label='Name'\r\n                            placeholder='Name'\r\n                            value={nameState.value}\r\n                            onChange ={(e) => {setNameState({value: e.target.value, isClicked: true});}}\r\n                            // onClick ={() => {nameRef.current.lastChild.firstChild.focus(); isNameClicked = true}}\r\n                          /></Ref>\r\n                          <Ref innerRef={subjectRef}>\r\n                          <Form.Field\r\n                            error={subjectState.value.length === 0 && subjectState.isClicked}\r\n                            id='form-input-control-last-name'\r\n                            control={Input}\r\n                            label='Subject'\r\n                            placeholder='Subject'\r\n                            value={subjectState.value}\r\n                            onChange ={(e) => {setSubjectState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                          </Form.Group>\r\n                        <Form.Group>\r\n                          <Ref innerRef={emailRef}>\r\n                          <Form.Field\r\n                            error={(emailState.value.length === 0 && emailState.isClicked) || (emailState.length > 1 && !isEmailOK  && emailState.isClicked)}\r\n                            id='form-input-control-email'\r\n                            control={Input}\r\n                            label='Email'\r\n                            placeholder='joe@wp.pl'\r\n                            value={emailState.value}\r\n                            onChange ={(e) => {setEmailState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Ref innerRef={messageRef}>\r\n                          <Form.Field\r\n                            error={messageState.value.length === 0 && messageState.isClicked}\r\n                            id='form-textarea-control-opinion'\r\n                            control={TextArea}\r\n                            label='Message'\r\n                            placeholder='Message'\r\n                            value={messageState.value}\r\n                            onChange ={(e) => {setMessageState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Field\r\n                            disabled={nameState.value.length === 0 || subjectState.value.length === 0 || emailState.value.length === 0 || messageState.value.length === 0 || !isEmailOK}\r\n                            id='form-button-control-public'\r\n                            control={Button}\r\n                            content='Send'\r\n                            onClick ={(e) => {handleSubmitForm(e)}}\r\n                         />\r\n                        </Form.Group>\r\n                        <Message\r\n                            success\r\n                            header='Form Completed'\r\n                            content=\"Message sent sucessfully\"\r\n                        />\r\n                        <Message\r\n                            error\r\n                            header='An Error Ocurred'\r\n                            content='Propably bad e-mail adress.'\r\n                        />\r\n                      </Form>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default ContactForm;","import React from 'react';\r\nimport { Grid, Segment, Icon, List, Header, Divider, Label, Accordion } from 'semantic-ui-react';\r\nimport LabelItems from '../components/LabelItems'\r\nimport ListItems from '../components/ListItems'\r\nimport Slider from '../components/Slider2';\r\nimport ContactForm from '../components/ContactForm'\r\n\r\nconst LayoutGrid = ({ dataLeft, dataRight, dataSelector }) => {\r\n\r\n    const ProjectContent = (\r\n        <Grid columns={2} divided inverted={dataSelector.layoutGridIsInverted} stackable padded=\"horizontally\">\r\n          <Grid.Row>\r\n\r\n            {/* LEFT SIDE */}\r\n\r\n            <Grid.Column color={dataSelector.layoutGridColumnColor}>\r\n\r\n            {/* 1st Row - Header of left side, only on skills/about and contact */}\r\n\r\n            {dataSelector.layoutType === \"Skills\" || dataSelector.layoutType === \"Contact\"\r\n            ? <>\r\n\r\n              <Grid.Row divided>\r\n\r\n                <Header inverted color='violet' as='h2'>\r\n                  <Icon name={dataLeft.headerIcon} />\r\n                  <Header.Content>{dataLeft.headerContent}</Header.Content>\r\n                </Header> \r\n\r\n              </Grid.Row>\r\n              </>\r\n            :\r\n            null}\r\n\r\n               <Grid.Row>\r\n\r\n            {/* 2nd row - Content of left side */}\r\n\r\n            {dataSelector.layoutType === \"Skills\"\r\n            ? <>\r\n                <Divider horizontal inverted>Info</Divider>\r\n                  <Header as=\"h2\" inverted>{dataLeft.dividerKeywords[0]} <br/>\r\n                  </Header>\r\n                  <Header as=\"h3\" inverted>{dataLeft.dividerKeywords[1]} <br/>\r\n                                                         {dataLeft.dividerKeywords[2]} <br/>\r\n                                                         {dataLeft.dividerKeywords[3]} <br/>\r\n                                                         {dataLeft.dividerKeywords[4]} <br/> \r\n                  </Header>\r\n                  <Label.Group tag size=\"large\">\r\n                    <LabelItems\r\n                      LabelItemsProps={dataLeft.labelItems} />\r\n                  </Label.Group>\r\n              </>\r\n            : null}\r\n\r\n\r\n            {dataSelector.layoutType === \"Contact\" \r\n            ? <>\r\n                <Divider horizontal inverted>Contact</Divider>\r\n                  {dataRight.dividerKeywords} \r\n                    <List inverted animated celled selection size=\"big\">\r\n                      <ListItems \r\n                        ListItemsProps={dataLeft}\r\n                      />\r\n                    </List>\r\n                    </>\r\n            : null}\r\n\r\n            {dataSelector.layoutType === \"Projects\" \r\n            ? <Slider  items = {dataLeft} /> \r\n            : null}\r\n\r\n              </Grid.Row>\r\n            </Grid.Column>\r\n\r\n           {/* RIGHT SIDE */}\r\n        \r\n            <Grid.Column color={dataSelector.layoutGridColumnColor}>\r\n\r\n            {dataSelector.layoutType === \"Skills\" || dataSelector.layoutType === \"Contact\"\r\n            ? <> \r\n              <Grid.Row divided>\r\n\r\n                <Header inverted color='violet' as='h2'>\r\n                  <Icon name={dataRight.headerIcon} />\r\n                <Header.Content>{dataRight.headerContent}</Header.Content>\r\n                </Header> \r\n\r\n              </Grid.Row>\r\n              </>\r\n            : null}\r\n              <Grid.Row>\r\n                  \r\n            {dataSelector.layoutType === \"Skills\"  || dataSelector.layoutType === \"Projects\"\r\n            ? <>\r\n                <Divider horizontal inverted={dataSelector.layoutGridIsInverted}>{dataSelector.layoutType === \"Skills\" ? \"Skills\" : \"Keywords\"}</Divider>\r\n                  {dataRight.dividerKeywords} \r\n                    <List inverted={dataSelector.layoutGridIsInverted} animated celled={dataSelector.layoutGridIsCelled} selection size=\"big\">\r\n                      <ListItems \r\n                        ListItemsProps={dataRight}\r\n                      />\r\n                    </List>\r\n                    </>\r\n            : null}\r\n\r\n\r\n            {dataSelector.layoutType === \"Contact\" \r\n            ? <>\r\n                <Divider horizontal inverted>Contact Form</Divider>\r\n                <ContactForm />\r\n                    </>\r\n            : null}\r\n\r\n                </Grid.Row>\r\n            </Grid.Column>\r\n            \r\n          </Grid.Row> \r\n      </Grid>\r\n      )\r\n\r\n      const projectAccPanels = [\r\n        {\r\n          key: 'accordrionKey',\r\n          title: {\r\n            as: Header,\r\n            content: dataRight.headerContent,\r\n            icon: dataRight.headerIcon,\r\n          },\r\n          content: {\r\n            content:  ProjectContent,\r\n            \r\n          },\r\n        },\r\n      ]\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        {dataSelector.layoutType === \"Projects\" \r\n        ? \r\n          <>\r\n            <Segment padded=\"very\">\r\n              <Accordion defaultActiveIndex={1} panels={projectAccPanels} />\r\n            </Segment> \r\n          </>\r\n        :\r\n          <>\r\n            <Segment inverted color={dataSelector.layoutGridColumnColor} vertical padded=\"very\"> \r\n                {ProjectContent}\r\n            </Segment> \r\n          </>\r\n        }\r\n        </>\r\n      );\r\n}\r\n \r\nexport default LayoutGrid;","import React, { useContext, useRef, useEffect, useState } from 'react';\r\nimport { StoreContext } from '../Store/StoreProvider';\r\nimport LayoutGrid from './LayoutGrid';\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport ScrollIntoViewIfNeeded from 'react-scroll-into-view-if-needed';\r\n\r\n// const useMountEffect = fun => useEffect(fun, []);\r\n\r\nconst LayoutActivator = ({active}) => {\r\n\r\n    const  { skills, aboutMe, contact, contactFormInfo, pCOWebProjects, pCOWebImages, hmiProjects, hmiImages } = useContext(StoreContext);\r\n\r\n    const [menuActiveState, setMenuActiveState] = useState({isMainActive: false, isProjectActive: false, isContactActive: false });\r\n    // const [contactRef, setContactRef] = useState(null);\r\n\r\n    // const executeScroll = (myRef) => {\r\n    //     // contactRef.current.scrollIntoView();\r\n    //     console.log(contactRef.current)\r\n    // }\r\n\r\n    // useMountEffect(executeScroll); // Scroll on mount\r\n\r\n    const dataSelectorSkills = {\r\n        layoutType: \"Skills\",\r\n        layoutGridColumnColor: \"black\",\r\n        layoutGridIsInverted: true,\r\n        layoutGridIsCelled: true,\r\n    }\r\n\r\n    const dataSelectorContact = {\r\n        layoutType: \"Contact\",\r\n        layoutGridColumnColor: \"black\",\r\n        layoutGridIsInverted: true,\r\n        layoutGridIsCelled: true,\r\n    }\r\n\r\n    const dataSelectorProjects = {\r\n        layoutType: \"Projects\",\r\n        layoutGridColumnColor: \"white\",\r\n        layoutGridIsInverted: false,\r\n        layoutGridIsCelled: false,\r\n    }\r\n\r\n    // const contactRefActivate = () => {\r\n    //     setContactRef(true)\r\n    // }\r\n    // let location = useLocation();\r\n\r\n    // console.log(\"pathname: \"+location.pathname);\r\n    // location.pathname === '/contact' && contactRef === false ? setContactRef(true) : setContactRef(false)\r\n\r\n        useEffect(() => {\r\n       switch (active) {\r\n            case 'Info&Skills': \r\n                return setMenuActiveState({isMainActive: true, isProjectActive: false, isContactActive: false });\r\n            case 'Projects': \r\n                return setMenuActiveState({isMainActive: false, isProjectActive: true, isContactActive: false });\r\n            case 'Contact': \r\n                return setMenuActiveState({isMainActive: false, isProjectActive: false, isContactActive: true });\r\n            default:\r\n                return setMenuActiveState({isMainActive: false, isProjectActive: false, isContactActive: false }); \r\n            }\r\n        }, [active]);\r\n        \r\nconst ScrollOptions = {\r\n    scrollMode: 'always',\r\n    behavior: 'smooth',\r\n}  \r\n\r\n\r\n    return (\r\n        <>\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isMainActive}\r\noptions={ScrollOptions}>\r\n    <div>\r\n        <LayoutGrid\r\n            dataLeft={aboutMe}\r\n            dataRight={skills}\r\n            dataSelector={dataSelectorSkills}\r\n        />\r\n        </div>\r\n</ScrollIntoViewIfNeeded>\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isProjectActive}\r\noptions={ScrollOptions}>\r\n        <LayoutGrid\r\n            dataLeft={pCOWebImages}\r\n            dataRight={pCOWebProjects}\r\n            dataSelector={dataSelectorProjects}\r\n        />\r\n</ScrollIntoViewIfNeeded>\r\n        <LayoutGrid\r\n            dataLeft={hmiImages}\r\n            dataRight={hmiProjects}\r\n            dataSelector={dataSelectorProjects}\r\n        />\r\n\r\n\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isContactActive}\r\noptions={ScrollOptions}>\r\n        <LayoutGrid\r\n            dataLeft={contact}\r\n            dataRight={contactFormInfo}\r\n            dataSelector={dataSelectorContact}\r\n        />\r\n    </ScrollIntoViewIfNeeded>\r\n\r\n\r\n        </>\r\n      );\r\n}\r\n \r\nexport default LayoutActivator;","import React, { Component } from 'react'\r\nimport { Grid, Segment, Icon, Menu, Image, Header, Sticky, Responsive, Sidebar, Dropdown } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\";\r\nimport VKM_Logo from '../img/VKM_logo_v4.png';\r\nimport LayoutActivator from './LayoutActivator';\r\n\r\nexport default class HeaderSui extends Component {\r\n  state = { activeItem: 'home', menuVisible: false }\r\n\r\n  \r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    const MenuList = [\r\n      {\r\n        nameActive: 'Info&Skills',\r\n        nameIcon: 'wrench',\r\n        to: '/'\r\n      }, \r\n      {\r\n        nameActive: 'Projects',\r\n        nameIcon: 'folder open',\r\n        to: '/projects'\r\n      }, \r\n      {\r\n        nameActive: 'Contact',\r\n        nameIcon: 'call',\r\n        to: '/contact'\r\n      }, \r\n      {\r\n        nameActive: 'GitHub',\r\n        nameIcon: 'github',\r\n        to: '/github'\r\n      },\r\n    ]\r\n\r\n    \r\n  const MenuItems = MenuList.map((item) => {\r\n    return (\r\n      <Link to={item.to} key={item.nameActive}>\r\n        <Menu.Item\r\n          name={item.nameActive}\r\n          active={activeItem === item.nameActive}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          <Icon name={item.nameIcon} />\r\n          {item.nameActive}\r\n        </Menu.Item>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  \r\n\r\n\r\nconst MenuHeader = (\r\n  <Menu icon='labeled' color=\"violet\" inverted borderless floated='right'>\r\n{MenuItems}\r\n      </Menu>\r\n  )\r\n\r\n  const MenuHeaderMobile = (\r\n    <Menu icon='labeled' color=\"violet\" inverted borderless floated='right'>\r\n         <Menu.Item name='Menu' open={this.state.menuVisible} onClick={() => this.setState({ menuVisible: !this.state.menuVisible })}>\r\n          <Icon name='list ul' /></Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n      <>\r\n\r\n<Grid columns='equal' inverted padded='vertically'>\r\n<Grid.Row color='violet' textAlign='left'>\r\n  <Grid.Column> \r\n    \r\n    <Image src={VKM_Logo} alt=\"logo\" width=\"300\" style={{ padding:0, margin:0}} />\r\n    \r\n  </Grid.Column>\r\n  <Grid.Column only='wideScreen largeScreen computer'>\r\n    <Segment color=\"violet\" inverted>\r\n    <Header as='h1'>\r\n    <Header.Content><i>Krzysztof Meyer</i></Header.Content>\r\n  </Header> Portfolio\r\n    </Segment>\r\n  </Grid.Column>\r\n  <Grid.Column only='wideScreen largeScreen computer'>\r\n    <Segment color=\"violet\" inverted textAlign='right'>\r\n      {MenuHeader}\r\n    </Segment>\r\n  </Grid.Column>\r\n  <Grid.Column only='mobile tablet'>\r\n    <Segment color=\"violet\" inverted textAlign='right'>\r\n{MenuHeaderMobile}\r\n{this.state.menuVisible ? MenuHeader : null}\r\n    </Segment>\r\n  </Grid.Column>\r\n</Grid.Row>\r\n</Grid>\r\n\r\n\r\n<LayoutActivator \r\n  active={this.state.activeItem}\r\n/>\r\n\r\n</>\r\n    )\r\n  }\r\n}","import React, { useEffect, useReducer, useContext, useState } from 'react'\r\nimport { Button, Grid, Modal, Image, Header, Icon } from 'semantic-ui-react'\r\nimport { StoreContext } from '../Store/StoreProvider';\r\n\r\nconst modalReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\r\n      return { ...state, closeOnDimmerClick: action.value }\r\n    case 'CONFIG_CLOSE_ON_ESCAPE':\r\n      return { ...state, closeOnEscape: action.value }\r\n    case 'OPEN_MODAL':\r\n      return { ...state, open: true }\r\n    case 'CLOSE_MODAL':\r\n      return { ...state, open: false }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nconst ModalImageViewer = () => {\r\n\r\nconst  { ModalOpen, setModalOpen, ModalImage } = useContext(StoreContext);\r\nconst  [open, setOpen] = useState(false);\r\n\r\n    return (\r\n <Modal\r\n basic\r\n onOpen={() => setModalOpen(false)}\r\n onClose={() => setOpen(false)}\r\n open={ModalOpen || open}\r\n size='fullscreen'\r\n>\r\n <Modal.Content>\r\n <Image src={ModalImage} wrapped centered />\r\n </Modal.Content>\r\n <Modal.Actions>\r\n   <Button basic color='red' inverted onClick={() => {setOpen(false); setModalOpen(false);}}>\r\n     <Icon name='remove' /> Exit\r\n   </Button>\r\n </Modal.Actions>\r\n</Modal>\r\n\r\n\r\n\r\n\r\n\r\n      )\r\n\r\n\r\n\r\n//   return (\r\n//     <Grid columns={1}>\r\n//       {/* <Grid.Column>\r\n//         <Checkbox\r\n//           checked={closeOnEscape}\r\n//           label={{ children: <code>closeOnEscape</code> }}\r\n//           onChange={(e, { checked }) =>\r\n//             dispatch({ type: 'CONFIG_CLOSE_ON_ESCAPE', value: checked })\r\n//           }\r\n//         />\r\n//         <br />\r\n//         <Checkbox\r\n//           checked={closeOnDimmerClick}\r\n//           label={{ children: <code>closeOnDimmerClick</code> }}\r\n//           onChange={(e, { checked }) =>\r\n//             dispatch({ type: 'CONFIG_CLOSE_ON_DIMMER_CLICK', value: checked })\r\n//           }\r\n//         />\r\n//       </Grid.Column> */}\r\n\r\n//       <Grid.Column>\r\n//         <Modal\r\n//           closeOnEscape={closeOnEscape}\r\n//           closeOnDimmerClick={closeOnDimmerClick}\r\n//           open={open}\r\n//           onOpen={() => dispatch({ type: 'OPEN_MODAL' })}\r\n//           onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\r\n//         //   trigger={open}\r\n//         >\r\n//           <Modal.Header>Delete Your Account</Modal.Header>\r\n//           <Modal.Content>\r\n//             <p>Are you sure you want to delete your account</p>\r\n//           </Modal.Content>\r\n//           <Modal.Actions>\r\n//             <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} negative>\r\n//               No\r\n//             </Button>\r\n//             <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} positive>\r\n//               Yes\r\n//             </Button>\r\n//           </Modal.Actions>\r\n//         </Modal>\r\n//       </Grid.Column>\r\n//     </Grid>\r\n//   )\r\n}\r\n\r\nexport default ModalImageViewer","import React, {useState, useEffect} from 'react';\r\nimport { Icon } from 'semantic-ui-react'\r\n// import '../App.css';\r\n\r\n\r\nconst ScrollTopArrow = () =>{\r\n\r\n  const [showScroll, setShowScroll] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    window.addEventListener('scroll', checkScrollTop)\r\n    return function cleanup() {\r\n      window.removeEventListener('scroll', checkScrollTop)\r\n    }\r\n  })\r\n\r\n  const checkScrollTop = () => {\r\n    if (!showScroll && window.pageYOffset > 200){\r\n      setShowScroll(true)\r\n    } else if (showScroll && window.pageYOffset <= 200){\r\n      setShowScroll(false)\r\n    }\r\n  };\r\n\r\n  const scrollTop = () =>{\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  return (\r\n    <div style={{ float: 'right', position: 'relative', left: '-50px'}}>\r\n        <Icon name=\"arrow circle up\" inverted color='violet' size='big' corner='bottom right'  className=\"scrollTop\" onClick={scrollTop} style={{height: 20, display: showScroll ? 'flex' : 'none'}}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScrollTopArrow;","import React, { Component } from 'react'\nimport './App.css';\nimport StoreProvider from './Store/StoreProvider';\nimport HeaderSui from './layouts/HeaderSui';\nimport ModalImageViewer from './components/Modal';\nimport ScrollTopArrow from './components/ScrollTopArrow'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     }\n  }\n\n  render() { \n\n    return (\n      <>\n      <StoreProvider>\n        <Router>\n          <HeaderSui />\n          <ModalImageViewer />\n          <ScrollTopArrow />\n        </Router>\n      </StoreProvider>\n            </>\n      );\n  };\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}