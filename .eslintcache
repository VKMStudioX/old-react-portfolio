[{"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\index.js":"1","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\App.jsx":"2","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Header.jsx":"3","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Slider.jsx":"4","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Section.jsx":"5","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\HomepageLayout.jsx":"6","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Store\\StoreProvider.jsx":"7","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\ProjectsSui.jsx":"8","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\HeaderSui.jsx":"9","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\SkillsSUI.jsx":"10","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\ContactSUI.jsx":"11","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\SingleProjectSui.jsx":"12","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\LabelItems.jsx":"13","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ListItems.jsx":"14","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\LayoutGrid.jsx":"15","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\LayoutActivator.jsx":"16","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Slider2.jsx":"17","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Modal.jsx":"18","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Custom.jsx":"19","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ContactForm.jsx":"20","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ScrollTopArrow.jsx":"21"},{"size":256,"mtime":1609077446445,"results":"22","hashOfConfig":"23"},{"size":683,"mtime":1609077433387,"results":"24","hashOfConfig":"23"},{"size":2805,"mtime":1608148744958,"results":"25","hashOfConfig":"23"},{"size":4800,"mtime":1607973225591,"results":"26","hashOfConfig":"23"},{"size":1779,"mtime":1607979817422,"results":"27","hashOfConfig":"23"},{"size":11707,"mtime":1608581025683,"results":"28","hashOfConfig":"23"},{"size":16112,"mtime":1610190432747,"results":"29","hashOfConfig":"23"},{"size":601,"mtime":1608648649219,"results":"30","hashOfConfig":"23"},{"size":2806,"mtime":1609022310320,"results":"31","hashOfConfig":"23"},{"size":2684,"mtime":1608745714862,"results":"32","hashOfConfig":"23"},{"size":3909,"mtime":1608744617021,"results":"33","hashOfConfig":"23"},{"size":2452,"mtime":1608752215042,"results":"34","hashOfConfig":"23"},{"size":483,"mtime":1608749498084,"results":"35","hashOfConfig":"23"},{"size":1505,"mtime":1608742926732,"results":"36","hashOfConfig":"23"},{"size":5217,"mtime":1608898806358,"results":"37","hashOfConfig":"23"},{"size":3680,"mtime":1609022450219,"results":"38","hashOfConfig":"23"},{"size":1127,"mtime":1608897585693,"results":"39","hashOfConfig":"23"},{"size":2906,"mtime":1608766096310,"results":"40","hashOfConfig":"23"},{"size":57,"mtime":1608761530100,"results":"41","hashOfConfig":"23"},{"size":5990,"mtime":1609019996357,"results":"42","hashOfConfig":"23"},{"size":1034,"mtime":1609009767146,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"6dqf56",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\index.js",[],["98","99"],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\App.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Header.jsx",["100"],"import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledButtonDropdown,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Badge, \r\n  Button\r\n} from 'reactstrap';\r\n// import { Button } from '@material-ui/core'\r\nimport VKM_Logo from './img/VKM_logo_v1.png';\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setOpen(!dropdownOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"secondary\" dark expand=\"md\" sticky>\r\n        <NavbarBrand><img src={VKM_Logo} alt=\"logo\" height=\"54\" /></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><Button variant=\"primary\" className=\"mr-0 ml-0\">Skills</Button></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><Button outline color=\"primary\">Experience</Button></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><Button outline color=\"primary\">Education</Button></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><Button outline color=\"primary\">Info</Button></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><Button outline color=\"primary\">Contact</Button></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\"><Button outline color=\"primary\">GitHub</Button></NavLink>\r\n            </NavItem>\r\n            <ButtonDropdown nav inNavbar isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n              <DropdownToggle caret outline color=\"primary\" style={{ height: '38px', marginTop: '8px'}}>\r\n                Live demo\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  pCOWeb - HVAC Control\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Water boiler control\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Piranha Music Shop\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </ButtonDropdown>\r\n          </Nav>\r\n          <NavbarText><Badge color=\"primary\"><h5 style={{ verticalAlign: 'middle'}}>Portfolio</h5></Badge></NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;",["101","102"],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Slider.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Section.jsx",["103","104","105","106"],"import React from 'react';\r\nimport { Card, Button, CardHeader, CardFooter, CardBody,\r\n  CardTitle, CardText, CardGroup,  CardSubtitle, Badge} from 'reactstrap';\r\n\r\n\r\n\r\n\r\nconst Section = (props) => {\r\n\r\n    const sectionCards = props.data.map((item) => {\r\n        return (\r\n            <Card body inverse color={item.color} key={item.id}>\r\n            <CardBody>\r\n            <CardHeader><h3><u>{item.id}</u></h3></CardHeader>\r\n              <CardText>\r\n              <h4><Badge color={item.color === \"secondary\" ? \"warning\" : \"secondary\"} >{item.contentId1}</Badge></h4> {item.contentText1} <br/>\r\n              <h4><Badge color={item.color === \"secondary\" ? \"warning\" : \"secondary\"}>{item.contentId2}</Badge></h4> {item.contentText2}\r\n                </CardText>\r\n              {/* <Button>Button</Button> */}\r\n            </CardBody>\r\n          </Card>\r\n        );\r\n      });\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n<CardGroup>\r\n     {sectionCards}\r\n    </CardGroup>\r\n{/* \r\n      <Card>\r\n        <CardHeader>Header</CardHeader>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n          <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n          <Button>Go somewhere</Button>\r\n        </CardBody>\r\n        <CardFooter>Footer</CardFooter>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader tag=\"h3\">Featured</CardHeader>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Special Title Treatment</CardTitle>\r\n          <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n          <Button>Go somewhere</Button>\r\n        </CardBody>\r\n        <CardFooter className=\"text-muted\">Footer</CardFooter>\r\n      </Card> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\HomepageLayout.jsx",["107"],"/* eslint-disable max-classes-per-file */\r\n/* eslint-disable react/no-multi-comp */\r\n\r\nimport { createMedia } from '@artsy/fresnel'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n} from 'semantic-ui-react'\r\nimport Slider2 from './Slider2';\r\n\r\nimport Drutex1 from './img/06_Drutex_WidokWyboruUrzadzen.png'\r\nimport Drutex2 from './img/06_R4053_WidokCentrali_1.png'\r\nimport Drutex3 from './img/06_R4053_WidokCentrali_2.png'\r\n\r\n\r\nconst { MediaContextProvider, Media } = createMedia({\r\n  breakpoints: {\r\n    mobile: 0,\r\n    tablet: 768,\r\n    computer: 1024,\r\n  },\r\n})\r\n\r\n/* Heads up!\r\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\r\n * components for such things.\r\n */\r\nconst HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as='h1'\r\n      content='Imagine-a-Company'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '2em' : '4em',\r\n        fontWeight: 'normal',\r\n        marginBottom: 0,\r\n        marginTop: mobile ? '1.5em' : '3em',\r\n      }}\r\n    />\r\n    <Header\r\n      as='h2'\r\n      content='Do whatever you want when you want to.'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '1.5em' : '1.7em',\r\n        fontWeight: 'normal',\r\n        marginTop: mobile ? '0.5em' : '1.5em',\r\n      }}\r\n    />\r\n    <Button primary size='huge'>\r\n      Get Started\r\n      <Icon name='right arrow' />\r\n    </Button>\r\n  </Container>\r\n)\r\n\r\n\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n}\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n  state = {\r\n    items: [\r\n      {\r\n        src: Drutex1,\r\n        caption: 'Drutex - Wybór urządzeń',\r\n        altText: 'Wizualizacja - pCOWeb'\r\n      },\r\n      {\r\n        src: Drutex2,\r\n        caption: 'Drutex - Kompresorownia cz.I',\r\n        altText: 'Wizualizacja - pCOWeb'\r\n      },\r\n      {\r\n        src: Drutex3,\r\n        caption: 'Drutex - Kompresorownia cz.II',\r\n        altText: 'Wizualizacja - pCOWeb'\r\n      }\r\n    ],\r\n\r\n\r\n  }\r\n\r\n  hideFixedMenu = () => this.setState({ fixed: false })\r\n  showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { fixed } = this.state\r\n\r\n    return (\r\n      <Media greaterThan='mobile'>\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 700, padding: '1em 0em' }}\r\n            vertical\r\n          >\r\n\r\n            <Menu\r\n              fixed={fixed ? 'top' : null}\r\n              inverted={!fixed}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size='large'\r\n            >\r\n              <Container>\r\n                <Menu.Item as='a' active>\r\n                  Home\r\n                </Menu.Item>\r\n                <Menu.Item as='a'>Work</Menu.Item>\r\n                <Menu.Item as='a'>Company</Menu.Item>\r\n                <Menu.Item as='a'>Careers</Menu.Item>\r\n                <Menu.Item position='right'>\r\n                  <Button as='a' inverted={!fixed}>\r\n                    Log in\r\n                  </Button>\r\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\r\n                    Sign Up\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n            {/* <HomepageHeading /> */}\r\n            <Slider2\r\n      items = {this.state.items}\r\n      />\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n      </Media>\r\n    )\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nclass MobileContainer extends Component {\r\n  state = {}\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true })\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { sidebarOpened } = this.state\r\n\r\n    return (\r\n      <Media as={Sidebar.Pushable} at='mobile'>\r\n        <Sidebar.Pushable>\r\n          <Sidebar\r\n            as={Menu}\r\n            animation='overlay'\r\n            inverted\r\n            onHide={this.handleSidebarHide}\r\n            vertical\r\n            visible={sidebarOpened}\r\n          >\r\n            <Menu.Item as='a' active>\r\n              Home\r\n            </Menu.Item>\r\n            <Menu.Item as='a'>Work</Menu.Item>\r\n            <Menu.Item as='a'>Company</Menu.Item>\r\n            <Menu.Item as='a'>Careers</Menu.Item>\r\n            <Menu.Item as='a'>Log in</Menu.Item>\r\n            <Menu.Item as='a'>Sign Up</Menu.Item>\r\n          </Sidebar>\r\n\r\n          <Sidebar.Pusher dimmed={sidebarOpened}>\r\n            <Segment\r\n              inverted\r\n              textAlign='center'\r\n              style={{ minHeight: 350, padding: '1em 0em' }}\r\n              vertical\r\n            >\r\n              <Container>\r\n                <Menu inverted pointing secondary size='large'>\r\n                  <Menu.Item onClick={this.handleToggle}>\r\n                    <Icon name='sidebar' />\r\n                  </Menu.Item>\r\n                  <Menu.Item position='right'>\r\n                    <Button as='a' inverted>\r\n                      Log in\r\n                    </Button>\r\n                    <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\r\n                      Sign Up\r\n                    </Button>\r\n                  </Menu.Item>\r\n                </Menu>\r\n              </Container>\r\n              <HomepageHeading mobile />\r\n            </Segment>\r\n\r\n            {children}\r\n          </Sidebar.Pusher>\r\n        </Sidebar.Pushable>\r\n      </Media>\r\n    )\r\n  }\r\n}\r\n\r\nMobileContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n  /* Heads up!\r\n   * For large applications it may not be best option to put all page into these containers at\r\n   * they will be rendered twice for SSR.\r\n   */\r\n  <MediaContextProvider>\r\n    <DesktopContainer>{children}</DesktopContainer>\r\n    <MobileContainer>{children}</MobileContainer>\r\n  </MediaContextProvider>\r\n)\r\n\r\nResponsiveContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst HomepageLayout = () => (\r\n  <ResponsiveContainer>\r\n    <Segment style={{ padding: '8em 0em' }} vertical>\r\n      <Grid container stackable verticalAlign='middle'>\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              We Help Companies and Companions\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              We can give your company superpowers to do things that they never thought possible.\r\n              Let us delight your customers and empower your needs... through pure data analytics.\r\n            </p>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              We Make Bananas That Can Dance\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              Yes that's right, you thought it was the stuff of dreams, but even bananas can be\r\n              bioengineered.\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated='right' width={6}>\r\n            <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign='center'>\r\n            <Button size='huge'>Check Them Out</Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: '0em' }} vertical>\r\n      <Grid celled='internally' columns='equal' stackable>\r\n        <Grid.Row textAlign='center'>\r\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              \"What a Company\"\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\r\n          </Grid.Column>\r\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              \"I shouldn't have gone with their competitor.\"\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              <Image avatar src='/images/avatar/large/nan.jpg' />\r\n              <b>Nan</b> Chief Fun Officer Acme Toys\r\n            </p>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: '8em 0em' }} vertical>\r\n      <Container text>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Breaking The Grid, Grabs Your Attention\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          Instead of focusing on content creation and hard work, we have learned how to master the\r\n          art of doing nothing by providing massive amounts of whitespace and generic content that\r\n          can seem massive, monolithic and worth your attention.\r\n        </p>\r\n        <Button as='a' size='large'>\r\n          Read More\r\n        </Button>\r\n\r\n        <Divider\r\n          as='h4'\r\n          className='header'\r\n          horizontal\r\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\r\n        >\r\n          <a href='#'>Case Studies</a>\r\n        </Divider>\r\n\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Did We Tell You About Our Bananas?\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\r\n          it's really true. It took years of gene splicing and combinatory DNA research, but our\r\n          bananas can really dance.\r\n        </p>\r\n        <Button as='a' size='large'>\r\n          I'm Still Quite Interested\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n\r\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n      <Container>\r\n        <Grid divided inverted stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as='h4' content='About' />\r\n              <List link inverted>\r\n                <List.Item as='a'>Sitemap</List.Item>\r\n                <List.Item as='a'>Contact Us</List.Item>\r\n                <List.Item as='a'>Religious Ceremonies</List.Item>\r\n                <List.Item as='a'>Gazebo Plans</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as='h4' content='Services' />\r\n              <List link inverted>\r\n                <List.Item as='a'>Banana Pre-Order</List.Item>\r\n                <List.Item as='a'>DNA FAQ</List.Item>\r\n                <List.Item as='a'>How To Access</List.Item>\r\n                <List.Item as='a'>Favorite X-Men</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={7}>\r\n              <Header as='h4' inverted>\r\n                Footer Header\r\n              </Header>\r\n              <p>\r\n                Extra space for a call to action inside the footer that could help re-engage users.\r\n              </p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  </ResponsiveContainer>\r\n)\r\n\r\nexport default HomepageLayout",["108","109"],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\Store\\StoreProvider.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\ProjectsSui.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\HeaderSui.jsx",["110","111","112","113"],"import React, { Component } from 'react'\r\nimport { Grid, Segment, Icon, Menu, Image, Header, Sticky, Responsive, Sidebar, Dropdown } from 'semantic-ui-react'\r\nimport { Link } from \"react-router-dom\";\r\nimport VKM_Logo from '../img/VKM_logo_v4.png';\r\nimport LayoutActivator from './LayoutActivator';\r\n\r\nexport default class HeaderSui extends Component {\r\n  state = { activeItem: 'home', menuVisible: false }\r\n\r\n  \r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    const MenuList = [\r\n      {\r\n        nameActive: 'Info&Skills',\r\n        nameIcon: 'wrench',\r\n        to: '/'\r\n      }, \r\n      {\r\n        nameActive: 'Projects',\r\n        nameIcon: 'folder open',\r\n        to: '/projects'\r\n      }, \r\n      {\r\n        nameActive: 'Contact',\r\n        nameIcon: 'call',\r\n        to: '/contact'\r\n      }, \r\n      {\r\n        nameActive: 'GitHub',\r\n        nameIcon: 'github',\r\n        to: '/github'\r\n      },\r\n    ]\r\n\r\n    \r\n  const MenuItems = MenuList.map((item) => {\r\n    return (\r\n      <Link to={item.to} key={item.nameActive}>\r\n        <Menu.Item\r\n          name={item.nameActive}\r\n          active={activeItem === item.nameActive}\r\n          onClick={this.handleItemClick}\r\n        >\r\n          <Icon name={item.nameIcon} />\r\n          {item.nameActive}\r\n        </Menu.Item>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  \r\n\r\n\r\nconst MenuHeader = (\r\n  <Menu icon='labeled' color=\"violet\" inverted borderless floated='right'>\r\n{MenuItems}\r\n      </Menu>\r\n  )\r\n\r\n  const MenuHeaderMobile = (\r\n    <Menu icon='labeled' color=\"violet\" inverted borderless floated='right'>\r\n         <Menu.Item name='Menu' open={this.state.menuVisible} onClick={() => this.setState({ menuVisible: !this.state.menuVisible })}>\r\n          <Icon name='list ul' /></Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n      <>\r\n\r\n<Grid columns='equal' inverted padded='vertically'>\r\n<Grid.Row color='violet' textAlign='left'>\r\n  <Grid.Column> \r\n    \r\n    <Image src={VKM_Logo} alt=\"logo\" width=\"300\" style={{ padding:0, margin:0}} />\r\n    \r\n  </Grid.Column>\r\n  <Grid.Column only='wideScreen largeScreen computer'>\r\n    <Segment color=\"violet\" inverted>\r\n    <Header as='h1'>\r\n    <Header.Content><i>Krzysztof Meyer</i></Header.Content>\r\n  </Header> Portfolio\r\n    </Segment>\r\n  </Grid.Column>\r\n  <Grid.Column only='wideScreen largeScreen computer'>\r\n    <Segment color=\"violet\" inverted textAlign='right'>\r\n      {MenuHeader}\r\n    </Segment>\r\n  </Grid.Column>\r\n  <Grid.Column only='mobile tablet'>\r\n    <Segment color=\"violet\" inverted textAlign='right'>\r\n{MenuHeaderMobile}\r\n{this.state.menuVisible ? MenuHeader : null}\r\n    </Segment>\r\n  </Grid.Column>\r\n</Grid.Row>\r\n</Grid>\r\n\r\n\r\n<LayoutActivator \r\n  active={this.state.activeItem}\r\n/>\r\n\r\n</>\r\n    )\r\n  }\r\n}","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\SkillsSUI.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\ContactSUI.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\SingleProjectSui.jsx",[],["114","115"],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\LabelItems.jsx",[],["116","117"],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ListItems.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\LayoutGrid.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\layouts\\LayoutActivator.jsx",["118","119","120","121"],"import React, { useContext, useRef, useEffect, useState } from 'react';\r\nimport { StoreContext } from '../Store/StoreProvider';\r\nimport LayoutGrid from './LayoutGrid';\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport ScrollIntoViewIfNeeded from 'react-scroll-into-view-if-needed';\r\n\r\n// const useMountEffect = fun => useEffect(fun, []);\r\n\r\nconst LayoutActivator = ({active}) => {\r\n\r\n    const  { skills, aboutMe, contact, contactFormInfo, pCOWebProjects, pCOWebImages, hmiProjects, hmiImages } = useContext(StoreContext);\r\n\r\n    const [menuActiveState, setMenuActiveState] = useState({isMainActive: false, isProjectActive: false, isContactActive: false });\r\n    // const [contactRef, setContactRef] = useState(null);\r\n\r\n    // const executeScroll = (myRef) => {\r\n    //     // contactRef.current.scrollIntoView();\r\n    //     console.log(contactRef.current)\r\n    // }\r\n\r\n    // useMountEffect(executeScroll); // Scroll on mount\r\n\r\n    const dataSelectorSkills = {\r\n        layoutType: \"Skills\",\r\n        layoutGridColumnColor: \"black\",\r\n        layoutGridIsInverted: true,\r\n        layoutGridIsCelled: true,\r\n    }\r\n\r\n    const dataSelectorContact = {\r\n        layoutType: \"Contact\",\r\n        layoutGridColumnColor: \"black\",\r\n        layoutGridIsInverted: true,\r\n        layoutGridIsCelled: true,\r\n    }\r\n\r\n    const dataSelectorProjects = {\r\n        layoutType: \"Projects\",\r\n        layoutGridColumnColor: \"white\",\r\n        layoutGridIsInverted: false,\r\n        layoutGridIsCelled: false,\r\n    }\r\n\r\n    // const contactRefActivate = () => {\r\n    //     setContactRef(true)\r\n    // }\r\n    // let location = useLocation();\r\n\r\n    // console.log(\"pathname: \"+location.pathname);\r\n    // location.pathname === '/contact' && contactRef === false ? setContactRef(true) : setContactRef(false)\r\n\r\n        useEffect(() => {\r\n       switch (active) {\r\n            case 'Info&Skills': \r\n                return setMenuActiveState({isMainActive: true, isProjectActive: false, isContactActive: false });\r\n            case 'Projects': \r\n                return setMenuActiveState({isMainActive: false, isProjectActive: true, isContactActive: false });\r\n            case 'Contact': \r\n                return setMenuActiveState({isMainActive: false, isProjectActive: false, isContactActive: true });\r\n            default:\r\n                return setMenuActiveState({isMainActive: false, isProjectActive: false, isContactActive: false }); \r\n            }\r\n        }, [active]);\r\n        \r\nconst ScrollOptions = {\r\n    scrollMode: 'always',\r\n    behavior: 'smooth',\r\n}  \r\n\r\n\r\n    return (\r\n        <>\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isMainActive}\r\noptions={ScrollOptions}>\r\n    <div>\r\n        <LayoutGrid\r\n            dataLeft={aboutMe}\r\n            dataRight={skills}\r\n            dataSelector={dataSelectorSkills}\r\n        />\r\n        </div>\r\n</ScrollIntoViewIfNeeded>\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isProjectActive}\r\noptions={ScrollOptions}>\r\n        <LayoutGrid\r\n            dataLeft={pCOWebImages}\r\n            dataRight={pCOWebProjects}\r\n            dataSelector={dataSelectorProjects}\r\n        />\r\n</ScrollIntoViewIfNeeded>\r\n        <LayoutGrid\r\n            dataLeft={hmiImages}\r\n            dataRight={hmiProjects}\r\n            dataSelector={dataSelectorProjects}\r\n        />\r\n\r\n\r\n\r\n<ScrollIntoViewIfNeeded \r\nactive={menuActiveState.isContactActive}\r\noptions={ScrollOptions}>\r\n        <LayoutGrid\r\n            dataLeft={contact}\r\n            dataRight={contactFormInfo}\r\n            dataSelector={dataSelectorContact}\r\n        />\r\n    </ScrollIntoViewIfNeeded>\r\n\r\n\r\n        </>\r\n      );\r\n}\r\n \r\nexport default LayoutActivator;","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Slider2.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Modal.jsx",["122","123","124","125","126"],"import React, { useEffect, useReducer, useContext, useState } from 'react'\r\nimport { Button, Grid, Modal, Image, Header, Icon } from 'semantic-ui-react'\r\nimport { StoreContext } from '../Store/StoreProvider';\r\n\r\nconst modalReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\r\n      return { ...state, closeOnDimmerClick: action.value }\r\n    case 'CONFIG_CLOSE_ON_ESCAPE':\r\n      return { ...state, closeOnEscape: action.value }\r\n    case 'OPEN_MODAL':\r\n      return { ...state, open: true }\r\n    case 'CLOSE_MODAL':\r\n      return { ...state, open: false }\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nconst ModalImageViewer = () => {\r\n\r\nconst  { ModalOpen, setModalOpen, ModalImage } = useContext(StoreContext);\r\nconst  [open, setOpen] = useState(false);\r\n\r\n    return (\r\n <Modal\r\n basic\r\n onOpen={() => setModalOpen(false)}\r\n onClose={() => setOpen(false)}\r\n open={ModalOpen || open}\r\n size='fullscreen'\r\n>\r\n <Modal.Content>\r\n <Image src={ModalImage} wrapped centered />\r\n </Modal.Content>\r\n <Modal.Actions>\r\n   <Button basic color='red' inverted onClick={() => {setOpen(false); setModalOpen(false);}}>\r\n     <Icon name='remove' /> Exit\r\n   </Button>\r\n </Modal.Actions>\r\n</Modal>\r\n\r\n\r\n\r\n\r\n\r\n      )\r\n\r\n\r\n\r\n//   return (\r\n//     <Grid columns={1}>\r\n//       {/* <Grid.Column>\r\n//         <Checkbox\r\n//           checked={closeOnEscape}\r\n//           label={{ children: <code>closeOnEscape</code> }}\r\n//           onChange={(e, { checked }) =>\r\n//             dispatch({ type: 'CONFIG_CLOSE_ON_ESCAPE', value: checked })\r\n//           }\r\n//         />\r\n//         <br />\r\n//         <Checkbox\r\n//           checked={closeOnDimmerClick}\r\n//           label={{ children: <code>closeOnDimmerClick</code> }}\r\n//           onChange={(e, { checked }) =>\r\n//             dispatch({ type: 'CONFIG_CLOSE_ON_DIMMER_CLICK', value: checked })\r\n//           }\r\n//         />\r\n//       </Grid.Column> */}\r\n\r\n//       <Grid.Column>\r\n//         <Modal\r\n//           closeOnEscape={closeOnEscape}\r\n//           closeOnDimmerClick={closeOnDimmerClick}\r\n//           open={open}\r\n//           onOpen={() => dispatch({ type: 'OPEN_MODAL' })}\r\n//           onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\r\n//         //   trigger={open}\r\n//         >\r\n//           <Modal.Header>Delete Your Account</Modal.Header>\r\n//           <Modal.Content>\r\n//             <p>Are you sure you want to delete your account</p>\r\n//           </Modal.Content>\r\n//           <Modal.Actions>\r\n//             <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} negative>\r\n//               No\r\n//             </Button>\r\n//             <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} positive>\r\n//               Yes\r\n//             </Button>\r\n//           </Modal.Actions>\r\n//         </Modal>\r\n//       </Grid.Column>\r\n//     </Grid>\r\n//   )\r\n}\r\n\r\nexport default ModalImageViewer","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\Custom.jsx",[],"C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ContactForm.jsx",["127"],"import React, { useState, useRef, useContext} from 'react';\r\nimport { Form, Input, TextArea, Button, Message, Ref } from 'semantic-ui-react';\r\nimport { StoreContext } from '../Store/StoreProvider';\r\n\r\nconst ContactForm = () => {\r\n\r\n    const  { contactForm, setContactForm  } = useContext(StoreContext);\r\n\r\n    const nameRef = useRef();\r\n    const subjectRef = useRef();\r\n    const emailRef = useRef();\r\n    const messageRef = useRef();\r\n\r\n    const [nameState, setNameState] = useState({value:'', isClicked: false});\r\n    const [subjectState, setSubjectState] = useState({value:'', isClicked: false});\r\n    const [emailState, setEmailState] = useState({value:'', isClicked: false});\r\n    const [messageState, setMessageState] = useState({value:'', isClicked: false});\r\n    const [formCheckerState, setFormCheckerState] = useState({success: false, error: false});\r\n\r\n    let isEmailOK;\r\n    emailState.value.includes('@') && emailState.value.includes('.') ? isEmailOK = true : isEmailOK = false\r\n    console.log(\"isEmailOK: \"+isEmailOK);\r\n\r\n    \r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        setContactForm({name: nameState.value, subject: subjectState.value, email: emailState.value, message: messageState.value});\r\n        // setContactForm({\r\n        //   name: nameRef.current.lastChild.firstChild.value,\r\n        //   subject: subjectRef.current.lastChild.firstChild.value,\r\n        //   email: emailRef.current.lastChild.firstChild.value, \r\n        //   message: messageRef.current.lastChild.value\r\n        //               });\r\n        setNameState({value:'', isClicked: false});\r\n        setSubjectState({value:'', isClicked: false});\r\n        setEmailState({value:'', isClicked: false});\r\n        setMessageState({value:'', isClicked: false});\r\n        setFormCheckerState({success: true, error: false})\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n    return ( \r\n        <>\r\n         <Form inverted color=\"white\" widths=\"equal\" success={formCheckerState.success} error={nameState.value.length > 0 && subjectState.value.length > 0 && emailState.value.length > 0 && messageState.value.length > 0 && !isEmailOK}> \r\n                        <Form.Group widths='equal'>\r\n                        <Ref innerRef={nameRef}>\r\n                          <Form.Field\r\n                            error={nameState.value.length === 0 && nameState.isClicked}\r\n                            id='form-input-control-first-name'\r\n                            control={Input}\r\n                            label='Name'\r\n                            placeholder='Name'\r\n                            value={nameState.value}\r\n                            onChange ={(e) => {setNameState({value: e.target.value, isClicked: true});}}\r\n                            // onClick ={() => {nameRef.current.lastChild.firstChild.focus(); isNameClicked = true}}\r\n                          /></Ref>\r\n                          <Ref innerRef={subjectRef}>\r\n                          <Form.Field\r\n                            error={subjectState.value.length === 0 && subjectState.isClicked}\r\n                            id='form-input-control-last-name'\r\n                            control={Input}\r\n                            label='Subject'\r\n                            placeholder='Subject'\r\n                            value={subjectState.value}\r\n                            onChange ={(e) => {setSubjectState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                          </Form.Group>\r\n                        <Form.Group>\r\n                          <Ref innerRef={emailRef}>\r\n                          <Form.Field\r\n                            error={(emailState.value.length === 0 && emailState.isClicked) || (emailState.length > 1 && !isEmailOK  && emailState.isClicked)}\r\n                            id='form-input-control-email'\r\n                            control={Input}\r\n                            label='Email'\r\n                            placeholder='joe@wp.pl'\r\n                            value={emailState.value}\r\n                            onChange ={(e) => {setEmailState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Ref innerRef={messageRef}>\r\n                          <Form.Field\r\n                            error={messageState.value.length === 0 && messageState.isClicked}\r\n                            id='form-textarea-control-opinion'\r\n                            control={TextArea}\r\n                            label='Message'\r\n                            placeholder='Message'\r\n                            value={messageState.value}\r\n                            onChange ={(e) => {setMessageState({value: e.target.value, isClicked: true});}}\r\n                          /></Ref>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Field\r\n                            disabled={nameState.value.length === 0 || subjectState.value.length === 0 || emailState.value.length === 0 || messageState.value.length === 0 || !isEmailOK}\r\n                            id='form-button-control-public'\r\n                            control={Button}\r\n                            content='Send'\r\n                            onClick ={(e) => {handleSubmitForm(e)}}\r\n                         />\r\n                        </Form.Group>\r\n                        <Message\r\n                            success\r\n                            header='Form Completed'\r\n                            content=\"Message sent sucessfully\"\r\n                        />\r\n                        <Message\r\n                            error\r\n                            header='An Error Ocurred'\r\n                            content='Propably bad e-mail adress.'\r\n                        />\r\n                      </Form>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default ContactForm;","C:\\IMPORTANT\\JAVASCRIPT\\01_REACT\\CreateReactApp\\PortfolioKM\\portfolio_km\\src\\components\\ScrollTopArrow.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":29},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"132","severity":1,"message":"138","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"139","line":2,"column":36,"nodeType":"134","messageId":"135","endLine":2,"endColumn":46},{"ruleId":"132","severity":1,"message":"140","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"141","line":3,"column":36,"nodeType":"134","messageId":"135","endLine":3,"endColumn":48},{"ruleId":"142","severity":1,"message":"143","line":324,"column":11,"nodeType":"144","endLine":324,"endColumn":23},{"ruleId":"128","replacedBy":"145"},{"ruleId":"130","replacedBy":"146"},{"ruleId":"132","severity":1,"message":"147","line":2,"column":52,"nodeType":"134","messageId":"135","endLine":2,"endColumn":58},{"ruleId":"132","severity":1,"message":"148","line":2,"column":60,"nodeType":"134","messageId":"135","endLine":2,"endColumn":70},{"ruleId":"132","severity":1,"message":"149","line":2,"column":72,"nodeType":"134","messageId":"135","endLine":2,"endColumn":79},{"ruleId":"132","severity":1,"message":"150","line":2,"column":81,"nodeType":"134","messageId":"135","endLine":2,"endColumn":89},{"ruleId":"128","replacedBy":"151"},{"ruleId":"130","replacedBy":"152"},{"ruleId":"128","replacedBy":"153"},{"ruleId":"130","replacedBy":"154"},{"ruleId":"132","severity":1,"message":"155","line":1,"column":29,"nodeType":"134","messageId":"135","endLine":1,"endColumn":35},{"ruleId":"132","severity":1,"message":"156","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":16},{"ruleId":"132","severity":1,"message":"157","line":4,"column":18,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"132","severity":1,"message":"158","line":4,"column":25,"nodeType":"134","messageId":"135","endLine":4,"endColumn":36},{"ruleId":"132","severity":1,"message":"159","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"160","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"161","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"162","line":2,"column":38,"nodeType":"134","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"132","severity":1,"message":"163","line":5,"column":7,"nodeType":"134","messageId":"135","endLine":5,"endColumn":19},{"ruleId":"132","severity":1,"message":"164","line":7,"column":14,"nodeType":"134","messageId":"135","endLine":7,"endColumn":25},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'UncontrolledButtonDropdown' is defined but never used.","Identifier","unusedVar",["165"],["166"],"'Button' is defined but never used.","'CardFooter' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["165"],["166"],"'Sticky' is defined but never used.","'Responsive' is defined but never used.","'Sidebar' is defined but never used.","'Dropdown' is defined but never used.",["165"],["166"],["165"],["166"],"'useRef' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'modalReducer' is assigned a value but never used.","'contactForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]